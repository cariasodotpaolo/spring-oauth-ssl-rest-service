<?xml version="1.0" encoding="UTF-8"?>

<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc" 
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:util="http://www.springframework.org/schema/util"
	xmlns:sec="http://www.springframework.org/schema/security"
	xsi:schemaLocation="
        http://www.springframework.org/schema/beans     
        http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
        http://www.springframework.org/schema/context 
        http://www.springframework.org/schema/context/spring-context-3.2.xsd
        http://www.springframework.org/schema/mvc
        http://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd
        http://www.springframework.org/schema/util 
        http://www.springframework.org/schema/util/spring-util-3.0.xsd
        http://www.springframework.org/schema/security 
        http://www.springframework.org/schema/security/spring-security-3.2.xsd">

	<!-- This should be declared here instead of the security context XML file since
	@PreAuthorize is defined in the Controller methods -->
	<sec:global-method-security pre-post-annotations="enabled" />
	
	<!-- This is required in this context. Otherwise, the @Controller will not be seen by Spring MVC 
		 For some reason, it doesn't read the component scan declared on main application context -->
	<context:component-scan base-package="com.shipserv.hr.controller" />	
		
	<!-- This is required in this context in order for @Value to work in the controller-->
	<context:property-placeholder location="classpath:spring.properties"/> 	
	
	<mvc:annotation-driven />
	
	<mvc:default-servlet-handler />

</beans>